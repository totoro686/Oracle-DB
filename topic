Interview list:
1. PLSQL 
1.1 how many cursor types and when to use them 
1.2 pipeline functions 
1.3 function and procedure , what's the difference 
1.4 result cache 
1.5 Bulk Collect and FOR ALL -- What's the benefit of using FOR-ALL insert? 
1.6 package header -- what's the scope of the variable defined in the package header? 
1.7 object type and collection type, define in explictly way      
    CREATE OR REPLACE TYPE typ_audit_info AS OBJECT 
    (       owner              VARCHAR2 (1000),       
            process_name       VARCHAR2 (1000),       
            lineno             INTEGER,       
            caller_t           VARCHAR2 (1000)       );      
            
    CREATE OR REPLACE TYPE typ_audit_info_table AS TABLE OF typ_audit_info;      --type declaration      TYPE TYP_DATA_LINE_TAB            IS TABLE OF VARCHAR2(32767); 1.8 exception handling     dbms_utility.format_error_stack and dbms_utility.format_error_backtrace 1.9 instead of trigger 1.10 types of trigger      row trigger and statement triggers      before and after triggers      instead of triggers      triggers on system events and user events (ddl/dml/user logon and logoff)2. Dimension Modeling 2.1 fact table and dimension table 2.2 star model and oracle star schema (physical) 2.3 surrogate key 2.4 how to handle slowly changing dimension data?     The process of loading a dimension table must incorporate the following major requirements:      1. Extract source data from sources      2. Assemble the dimension attributes      3. Identify new and changed dimension records      4. Manage surrogate keys      5. Process new records      6. Process type 1 changes      7. Process type 2 changes 2.5 describe the ETL process/ purpose of each step 2.6 loading difference of dimension tables and FACT tables3. Table / Index Design 3.1 Partition type, purpose 3.2 table compress and index compress 3.3 INITRANS and it's usage 3.4 error table when doing insert 3.5 logging or nologging when creating table       Database noarchivelog mode - If your database is in "noarchivelog" mode and you are no using the APPEND hint for inserts, you WILL STILL generate redo logs!       Database archivelog mode   - If you are in archivelog mode, the table must be altered to nologging mode AND the SQL must be using the APPEND hint.  Else, redo WILL be generated. 3.6 index local and global 3.7 initial size and next 3.8 row chain and row movement4. SQL Tuning 4.1 how to read the execution plan 4.2 Join type ( nested loops/hash/merge), the drive table and hint 4.3 how to check if partitin pruning happened 4.4 common index scan type(range scan/fast full/unique scan/skip scan) 4.5 statistics type (table/index/column statistics and system statistics and parameters)     dbms_stats.gather_system_stats:     No Workload (NW) stats:        CPUSPEEDNW - CPU speed        IOSEEKTIM - The I/O seek time in milliseconds        IOTFRSPEED - I/O transfer speed in milliseconds     Workload-related stats:        SREADTIM  - Single block read time in milliseconds        MREADTIM - Multiblock read time in ms        CPUSPEED - CPU speed        MBRC - Average blocks read per multiblock read (see db_file_multiblock_read_count)        MAXTHR - Maximum I/O throughput (for OPQ only)        SLAVETHR - OPQ Factotum (slave) throughput (OPQ only) 4.6 how to stablize a execution plan for a sql (outline/sql profile/sql plan management) 4.7 how to analyze a awr report (database busy or not/top sql/top wait events) 4.8 bind peeking 4.9 hard parse and soft parse 4.10 row lock contention 4.11 potential reason of bad performed SQL:      missing or changing stats/upgrade optimizer/ chaning data/ missing access structure      poorly written SQLs      bind-sensitive SQL with bind peeking5. recovery   instance recovery in the middle of a transaction -- the use of undo and redo6. deadlock types
